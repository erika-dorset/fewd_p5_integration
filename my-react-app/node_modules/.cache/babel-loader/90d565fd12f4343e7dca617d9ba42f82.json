{"ast":null,"code":"var _jsxFileName = \"/workspace/fewd_p5_integration/my-react-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sketch from 'react-p5';\n\nclass App extends React.Component {\n  // snowflake class\n  snowflake() {\n    // initialize coordinates\n    this.posX = 0;\n    this.posY = random(-50, 0);\n    this.initialangle = random(0, 2 * PI);\n    this.size = random(2, 5); // radius of snowflake spiral\n    // chosen so the snowflakes are uniformly spread out in area\n\n    this.radius = sqrt(random(pow(width / 2, 2)));\n\n    this.update = function (time) {\n      // x position follows a circle\n      let w = 0.6; // angular speed\n\n      let angle = w * time + this.initialangle;\n      this.posX = width / 2 + this.radius * sin(angle); // different size snowflakes fall at slightly different y speeds\n\n      this.posY += pow(this.size, 0.5); // delete snowflake if past end of screen\n\n      if (this.posY > height) {\n        let index = snowflakes.indexOf(this);\n        snowflakes.splice(index, 1);\n      }\n    };\n\n    this.display = function () {\n      ellipse(this.posX, this.posY, this.size);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \"react-p5\"), /*#__PURE__*/React.createElement(Sketch, {\n      setup: (p5, parentRef) => {\n        p5.createCanvas(1000, 400).parent(parentRef);\n        p5.fill(240);\n      },\n      draw: p5 => {\n        p5.background('pink');\n        p5.fill(255, this.y * 1.3, 0);\n        let t = p5.frameCount / 60; // update time\n        // create a random number of snowflakes each frame\n\n        for (let i = 0; i < random(5); i++) {\n          snowflakes.push(new snowflake()); // append snowflake object\n        } // loop through snowflakes with a for..of loop\n\n\n        for (let flake of snowflakes) {\n          flake.update(t); // update snowflake position\n\n          flake.display(); // draw snowflake\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/workspace/fewd_p5_integration/my-react-app/src/index.js"],"names":["React","ReactDOM","Sketch","App","Component","snowflake","posX","posY","random","initialangle","PI","size","radius","sqrt","pow","width","update","time","w","angle","sin","height","index","snowflakes","indexOf","splice","display","ellipse","render","p5","parentRef","createCanvas","parent","fill","background","y","t","frameCount","i","push","flake","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sketch from 'react-p5';\n\n\nclass App extends React.Component {\n// snowflake class\n snowflake() {\n  // initialize coordinates\n  this.posX = 0;\n  this.posY = random(-50, 0);\n  this.initialangle = random(0, 2 * PI);\n  this.size = random(2, 5);\n\n  // radius of snowflake spiral\n  // chosen so the snowflakes are uniformly spread out in area\n  this.radius = sqrt(random(pow(width / 2, 2)));\n\n  this.update = function(time) {\n    // x position follows a circle\n    let w = 0.6; // angular speed\n    let angle = w * time + this.initialangle;\n    this.posX = width / 2 + this.radius * sin(angle);\n\n    // different size snowflakes fall at slightly different y speeds\n    this.posY += pow(this.size, 0.5);\n\n    // delete snowflake if past end of screen\n    if (this.posY > height) {\n      let index = snowflakes.indexOf(this);\n      snowflakes.splice(index, 1);\n    }\n  };\n\n  this.display = function() {\n    ellipse(this.posX, this.posY, this.size);\n  };\n}\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h1>react-p5</h1>\n                <Sketch\n                    setup={(p5, parentRef) => {\n                        p5.createCanvas(1000, 400).parent(parentRef);\n                        p5.fill(240);\n                    }}\n                    draw={p5 => {\n                        p5.background('pink');\n\n                        p5.fill(255, this.y * 1.3, 0);\n                        let t = p5.frameCount / 60; // update time\n\n                        // create a random number of snowflakes each frame\n                        for (let i = 0; i < random(5); i++) {\n                            snowflakes.push(new snowflake()); // append snowflake object\n                        }\n\n                        // loop through snowflakes with a for..of loop\n                        for (let flake of snowflakes) {\n                            flake.update(t); // update snowflake position\n                            flake.display(); // draw snowflake\n                        }\n                    }}\n                    \n                />\n            </div>\n        );\n    }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);"]},"metadata":{},"sourceType":"module"}