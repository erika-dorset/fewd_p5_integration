{"ast":null,"code":"var _jsxFileName = \"/workspace/fewd_p5_integration/my-react-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sketch from 'react-p5';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setup = (p5, parentRef) => {\n      p5.createCanvas(200, 200).parent(parentRef);\n      p5.fill(240);\n      p5.noStroke();\n    };\n\n    this.snowflake = p5 => {\n      // initialize coordinates\n      this.posX = 0;\n      this.posY = p5.random(-50, 0);\n      this.initialangle = p5.random(0, 2 * p5.PI);\n      this.size = p5.random(2, 5); // radius of snowflake spiral\n      // chosen so the snowflakes are uniformly spread out in area\n\n      this.radius = p5.sqrt(p5.random(p5.pow(p5.width / 2, 2)));\n\n      this.update = function (time) {\n        // x position follows a circle\n        let w = 0.6; // angular speed\n\n        let angle = w * time + this.initialangle;\n        this.posX = p5.width / 2 + this.radius * p5.sin(angle); // different size snowflakes fall at slightly different y speeds\n\n        this.posY += p5.pow(this.size, 0.5); // delete snowflake if past end of screen\n\n        if (this.posY > p5.height) {\n          let index = p5.snowflakes.indexOf(this);\n          p5.snowflakes.splice(index, 1);\n        }\n      };\n\n      this.display = function () {\n        p5.ellipse(this.posX, this.posY, this.size);\n      };\n    };\n\n    this.draw = p5 => {\n      p5.background('pink');\n      let t = p5.frameCount / 60; // update time\n      // create a random number of snowflakes each frame\n\n      for (let i = 0; i < p5.random(5); i++) {\n        p5.snowflakes.push(new snowflake()); // append snowflake object\n      } // loop through snowflakes with a for..of loop\n\n\n      for (let flake of p5.snowflakes) {\n        flake.update(t); // update snowflake position\n\n        flake.display(); // draw snowflake\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"react-p5\"), /*#__PURE__*/React.createElement(Sketch, {\n      setup: this.setup,\n      draw: this.draw,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/workspace/fewd_p5_integration/my-react-app/src/index.js"],"names":["React","ReactDOM","Sketch","App","Component","setup","p5","parentRef","createCanvas","parent","fill","noStroke","snowflake","posX","posY","random","initialangle","PI","size","radius","sqrt","pow","width","update","time","w","angle","sin","height","index","snowflakes","indexOf","splice","display","ellipse","draw","background","t","frameCount","i","push","flake","render","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sketch from 'react-p5';\n\n\nclass App extends React.Component {\n    setup = (p5, parentRef) => {\n        p5.createCanvas(200, 200).parent(parentRef);\n        p5.fill(240);\n        p5.noStroke();\n    };\n\n    // snowflake class\nsnowflake = p5 => {\n    // initialize coordinates\n    this.posX = 0;\n    this.posY = p5.random(-50, 0);\n    this.initialangle = p5.random(0, 2 * p5.PI);\n    this.size = p5.random(2, 5);\n\n    // radius of snowflake spiral\n    // chosen so the snowflakes are uniformly spread out in area\n    this.radius = p5.sqrt(p5.random(p5.pow(p5.width / 2, 2)));\n\n    this.update = function (time) {\n        // x position follows a circle\n        let w = 0.6; // angular speed\n        let angle = w * time + this.initialangle;\n        this.posX = p5.width / 2 + this.radius * p5.sin(angle);\n\n        // different size snowflakes fall at slightly different y speeds\n        this.posY += p5.pow(this.size, 0.5);\n\n        // delete snowflake if past end of screen\n        if (this.posY > p5.height) {\n            let index = p5.snowflakes.indexOf(this);\n            p5.snowflakes.splice(index, 1);\n        }\n    };\n\n    this.display = function () {\n        p5.ellipse(this.posX, this.posY, this.size);\n    }\n};\n\n\n    draw =  p5 => {\n    p5.background('pink');\n    let t = p5.frameCount / 60; // update time\n\n    // create a random number of snowflakes each frame\n    for (let i = 0; i < p5.random(5); i++) {\n        p5.snowflakes.push(new snowflake()); // append snowflake object\n    }\n\n    // loop through snowflakes with a for..of loop\n    for (let flake of p5.snowflakes) {\n        flake.update(t); // update snowflake position\n        flake.display(); // draw snowflake\n    }\n};\n\n\nrender() {\n    return (\n        <div className=\"App\">\n            <h1>react-p5</h1>\n            <Sketch setup={this.setup} draw={this.draw}/>\n        </div>\n    );\n};\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);"]},"metadata":{},"sourceType":"module"}