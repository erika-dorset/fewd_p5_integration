{"ast":null,"code":"var _jsxFileName = \"/workspace/fewd_p5_integration/my-react-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sketch from 'react-p5';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.draw = p5 => {\n      p5.background('pink');\n      let t = p5.frameCount / 60; // update time\n      // create a random number of snowflakes each frame\n\n      for (let i = 0; i < p5.random(5); i++) {\n        this.nowflakes.push(new snowflake()); // append snowflake object\n      } // loop through snowflakes with a for..of loop\n\n\n      for (let flake of p5.snowflakes) {\n        p5.flake.update(t); // update snowflake position\n\n        p5.flake.display(); // draw snowflake\n      }\n    };\n\n    this.snowflake = p5 => {\n      // initialize coordinates\n      this.posX = 0;\n      this.posY = p5.random(-50, 0);\n      this.initialangle = p5.random(0, 2 * p5.PI);\n      this.size = p5.random(2, 5); // radius of snowflake spiral\n      // chosen so the snowflakes are uniformly spread out in area\n\n      this.radius = p5.sqrt(p5.random(p5.pow(p5.width / 2, 2)));\n\n      this.update = function (time) {\n        // x position follows a circle\n        let w = 0.6; // angular speed\n\n        let angle = w * time + this.initialangle;\n        this.posX = p5.width / 2 + this.radius * p5.sin(angle); // different size snowflakes fall at slightly different y speeds\n\n        this.posY += p5.pow(this.size, 0.5); // delete snowflake if past end of screen\n\n        if (this.posY > p5.height) {\n          let index = p5.snowflakes.indexOf(this);\n          p5.snowflakes.splice(index, 1);\n        }\n      };\n\n      this.display = function () {\n        p5.ellipse(this.posX, this.posY, this.size);\n      };\n    };\n  }\n\n  render() {\n    setup = (p5, parentRef) => {\n      p5.createCanvas(200, 200).parent(parentRef);\n      p5.fill(240);\n      p5.noStroke();\n    };\n  }\n\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/workspace/fewd_p5_integration/my-react-app/src/index.js"],"names":["React","ReactDOM","Sketch","App","Component","draw","p5","background","t","frameCount","i","random","nowflakes","push","snowflake","flake","snowflakes","update","display","posX","posY","initialangle","PI","size","radius","sqrt","pow","width","time","w","angle","sin","height","index","indexOf","splice","ellipse","render","setup","parentRef","createCanvas","parent","fill","noStroke","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sketch from 'react-p5';\n\n\nclass App extends React.Component {\nrender() {\n        setup = (p5, parentRef) => {\n        p5.createCanvas(200, 200).parent(parentRef);\n        p5.fill(240);\n        p5.noStroke();\n    }\n};\n\ndraw =  p5 => {\n    p5.background('pink');\n    let t = p5.frameCount / 60; // update time\n\n    // create a random number of snowflakes each frame\n    for (let i = 0; i < p5.random(5); i++) {\n        this.nowflakes.push(new snowflake()); // append snowflake object\n    }\n\n    // loop through snowflakes with a for..of loop\n    for (let flake of p5.snowflakes) {\n        p5.flake.update(t); // update snowflake position\n        p5.flake.display(); // draw snowflake\n    }\n};\n\n// snowflake class\nsnowflake = p5 => {\n    // initialize coordinates\n    this.posX = 0;\n    this.posY = p5.random(-50, 0);\n    this.initialangle = p5.random(0, 2 * p5.PI);\n    this.size = p5.random(2, 5);\n\n    // radius of snowflake spiral\n    // chosen so the snowflakes are uniformly spread out in area\n    this.radius = p5.sqrt(p5.random(p5.pow(p5.width / 2, 2)));\n\n    this.update = function (time) {\n        // x position follows a circle\n        let w = 0.6; // angular speed\n        let angle = w * time + this.initialangle;\n        this.posX = p5.width / 2 + this.radius * p5.sin(angle);\n\n        // different size snowflakes fall at slightly different y speeds\n        this.posY += p5.pow(this.size, 0.5);\n\n        // delete snowflake if past end of screen\n        if (this.posY > p5.height) {\n            let index = p5.snowflakes.indexOf(this);\n            p5.snowflakes.splice(index, 1);\n        }\n    };\n\n    this.display = function () {\n        p5.ellipse(this.posX, this.posY, this.size);\n    }\n};\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);"]},"metadata":{},"sourceType":"module"}