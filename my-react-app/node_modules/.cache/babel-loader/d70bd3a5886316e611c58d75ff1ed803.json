{"ast":null,"code":"var _jsxFileName = \"/workspace/fewd_p5_integration/my-react-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sketch from 'react-p5';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.x = 50;\n    this.y = 50;\n\n    this.setup = (p5, canvasParentRef) => {\n      p5.createCanvas(720, 400).parent(canvasParentRef); // use parent to render canvas in this ref (without that p5 render this canvas outside your component)\n\n      for (let i = 0; i < p5.width / 10; i++) {\n        particles.push(new Particle());\n      }\n    };\n\n    this.draw = p5 => {\n      p5.background(0);\n      p5.ellipse(this.x, this.y, 70, 70); // NOTE: Do not use setState in draw function or in functions that is executed in draw function... pls use normal variables or class properties for this purposes\n\n      this.x++;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Sketch, {\n      setup: this.setup,\n      draw: this.draw,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    });\n  }\n\n} // this class describes the properties of a single particle.\n\n\nclass Particle {\n  // setting the co-ordinates, radius and the\n  // speed of a particle in both the co-ordinates axes.\n  constructor() {\n    this.x = random(0, width);\n    this.y = random(0, height);\n    this.r = random(1, 8);\n    this.xSpeed = random(-2, 2);\n    this.ySpeed = random(-1, 1.5);\n  } // creation of a particle.\n\n\n  createParticle() {\n    noStroke();\n    fill('rgba(200,169,169,0.5)');\n    circle(this.x, this.y, this.r);\n  } // setting the particle in motion.\n\n\n  moveParticle() {\n    if (this.x < 0 || this.x > width) this.xSpeed *= -1;\n    if (this.y < 0 || this.y > height) this.ySpeed *= -1;\n    this.x += this.xSpeed;\n    this.y += this.ySpeed;\n  } // this function creates the connections(lines)\n  // between particles which are less than a certain distance apart\n\n\n  joinParticles(paraticles) {\n    particles.forEach(element => {\n      let dis = dist(this.x, this.y, element.x, element.y);\n\n      if (dis < 85) {\n        stroke('rgba(255,255,255,0.04)');\n        line(this.x, this.y, element.x, element.y);\n      }\n    });\n  }\n\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/workspace/fewd_p5_integration/my-react-app/src/index.js"],"names":["React","ReactDOM","Sketch","App","Component","x","y","setup","p5","canvasParentRef","createCanvas","parent","i","width","particles","push","Particle","draw","background","ellipse","render","constructor","random","height","r","xSpeed","ySpeed","createParticle","noStroke","fill","circle","moveParticle","joinParticles","paraticles","forEach","element","dis","dist","stroke","line","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sketch from 'react-p5';\n\n\nclass App extends React.Component {\n\n  x = 50;\n  y = 50;\n \n  setup = (p5, canvasParentRef) => {\n    p5.createCanvas(720, 400).parent(canvasParentRef); // use parent to render canvas in this ref (without that p5 render this canvas outside your component)\n      for(let i = 0;i< p5.width/10;i++){\n      particles.push(new Particle());\n  }\n};\n  draw = p5 => {\n    p5.background(0);\n    p5.ellipse(this.x, this.y, 70, 70);\n    // NOTE: Do not use setState in draw function or in functions that is executed in draw function... pls use normal variables or class properties for this purposes\n    this.x++;\n  };\n \n  render() {\n    return <Sketch setup={this.setup} draw={this.draw} />;\n  }\n}\n\n// this class describes the properties of a single particle.\nclass Particle {\n// setting the co-ordinates, radius and the\n// speed of a particle in both the co-ordinates axes.\n  constructor(){\n    this.x = random(0,width);\n    this.y = random(0,height);\n    this.r = random(1,8);\n    this.xSpeed = random(-2,2);\n    this.ySpeed = random(-1,1.5);\n  }\n\n// creation of a particle.\n  createParticle() {\n    noStroke();\n    fill('rgba(200,169,169,0.5)');\n    circle(this.x,this.y,this.r);\n  }\n\n// setting the particle in motion.\n  moveParticle() {\n    if(this.x < 0 || this.x > width)\n      this.xSpeed*=-1;\n    if(this.y < 0 || this.y > height)\n      this.ySpeed*=-1;\n    this.x+=this.xSpeed;\n    this.y+=this.ySpeed;\n  }\n\n// this function creates the connections(lines)\n// between particles which are less than a certain distance apart\n  joinParticles(paraticles) {\n    particles.forEach(element =>{\n      let dis = dist(this.x,this.y,element.x,element.y);\n      if(dis<85) {\n        stroke('rgba(255,255,255,0.04)');\n        line(this.x,this.y,element.x,element.y);\n      }\n    });\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);"]},"metadata":{},"sourceType":"module"}