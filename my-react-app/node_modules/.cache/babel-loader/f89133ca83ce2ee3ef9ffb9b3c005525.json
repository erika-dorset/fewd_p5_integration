{"ast":null,"code":"var _jsxFileName = \"/workspace/fewd_p5_integration/my-react-app/src/Snowflake.js\";\nimport React from 'react';\nimport Sketch from 'react-p5';\nimport './style.css';\n\nclass Snowflake extends React.Component {\n  render() {\n    let snowflakes = [];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }\n    }, \"Floating Snowflakes\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://p5js.org/examples/simulate-snowflakes.html\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }, \"Original Sketch reference \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Sketch, {\n      setup: (p5, parentRef) => {\n        p5.createCanvas(700, 500).parent(parentRef);\n        p5.fill(240);\n        p5.noStroke(); // snowflake class\n\n        function snowflake() {\n          // initialize coordinates\n          this.posX = 0;\n          this.posY = p5.random(-50, 0);\n          this.initialangle = p5.random(0, 2 * PI);\n          this.size = p5.random(2, 5); // radius of snowflake spiral\n          // chosen so the snowflakes are uniformly spread out in area\n\n          this.radius = sqrt(p5.random(p5.pow(p5.width / 2, 2)));\n\n          this.update = function (time) {\n            // x position follows a circle\n            let w = 0.6; // angular speed\n\n            let angle = w * time + this.initialangle;\n            this.posX = p5.width / 2 + this.radius * p5.sin(angle); // different size snowflakes fall at slightly different y speeds\n\n            this.posY += p5.pow(this.size, 0.5); // delete snowflake if past end of screen\n\n            if (this.posY > p5.height) {\n              let index = snowflakes.indexOf(this);\n              snowflakes.splice(index, 1);\n            }\n          };\n\n          this.display = function () {\n            p5.ellipse(this.posX, this.posY, this.size);\n          };\n        }\n      },\n      draw: p5 => {\n        p5.background('red');\n        let t = p5.frameCount / 60; // update time\n        // create a random number of snowflakes each frame\n\n        for (let i = 0; i < random(5); i++) {\n          snowflakes.push(new snowflake()); // append snowflake object\n        } // loop through snowflakes with a for..of loop\n\n\n        for (let flake of snowflakes) {\n          flake.update(t); // update snowflake position\n\n          flake.display(); // draw snowflake\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Snowflake;","map":{"version":3,"sources":["/workspace/fewd_p5_integration/my-react-app/src/Snowflake.js"],"names":["React","Sketch","Snowflake","Component","render","snowflakes","p5","parentRef","createCanvas","parent","fill","noStroke","snowflake","posX","posY","random","initialangle","PI","size","radius","sqrt","pow","width","update","time","w","angle","sin","height","index","indexOf","splice","display","ellipse","background","t","frameCount","i","push","flake"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,aAAP;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAEpCC,EAAAA,MAAM,GAAG;AACL,QAAIC,UAAU,GAAG,EAAjB;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAG,MAAA,IAAI,EAAC,oDAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII,oBAAC,MAAD;AACI,MAAA,KAAK,EAAE,CAACC,EAAD,EAAKC,SAAL,KAAmB;AACtBD,QAAAA,EAAE,CAACE,YAAH,CAAgB,GAAhB,EAAqB,GAArB,EAA0BC,MAA1B,CAAiCF,SAAjC;AACAD,QAAAA,EAAE,CAACI,IAAH,CAAQ,GAAR;AACAJ,QAAAA,EAAE,CAACK,QAAH,GAHsB,CAKtB;;AACA,iBAASC,SAAT,GAAqB;AACjB;AACA,eAAKC,IAAL,GAAY,CAAZ;AACA,eAAKC,IAAL,GAAYR,EAAE,CAACS,MAAH,CAAU,CAAC,EAAX,EAAe,CAAf,CAAZ;AACA,eAAKC,YAAL,GAAoBV,EAAE,CAACS,MAAH,CAAU,CAAV,EAAa,IAAIE,EAAjB,CAApB;AACA,eAAKC,IAAL,GAAYZ,EAAE,CAACS,MAAH,CAAU,CAAV,EAAa,CAAb,CAAZ,CALiB,CAOjB;AACA;;AACA,eAAKI,MAAL,GAAcC,IAAI,CAACd,EAAE,CAACS,MAAH,CAAUT,EAAE,CAACe,GAAH,CAAOf,EAAE,CAACgB,KAAH,GAAW,CAAlB,EAAqB,CAArB,CAAV,CAAD,CAAlB;;AAEA,eAAKC,MAAL,GAAc,UAAUC,IAAV,EAAgB;AAC1B;AACA,gBAAIC,CAAC,GAAG,GAAR,CAF0B,CAEb;;AACb,gBAAIC,KAAK,GAAGD,CAAC,GAAGD,IAAJ,GAAW,KAAKR,YAA5B;AACA,iBAAKH,IAAL,GAAYP,EAAE,CAACgB,KAAH,GAAW,CAAX,GAAe,KAAKH,MAAL,GAAcb,EAAE,CAACqB,GAAH,CAAOD,KAAP,CAAzC,CAJ0B,CAM1B;;AACA,iBAAKZ,IAAL,IAAaR,EAAE,CAACe,GAAH,CAAO,KAAKH,IAAZ,EAAkB,GAAlB,CAAb,CAP0B,CAS1B;;AACA,gBAAI,KAAKJ,IAAL,GAAYR,EAAE,CAACsB,MAAnB,EAA2B;AACvB,kBAAIC,KAAK,GAAGxB,UAAU,CAACyB,OAAX,CAAmB,IAAnB,CAAZ;AACAzB,cAAAA,UAAU,CAAC0B,MAAX,CAAkBF,KAAlB,EAAyB,CAAzB;AACH;AACJ,WAdD;;AAgBA,eAAKG,OAAL,GAAe,YAAY;AACvB1B,YAAAA,EAAE,CAAC2B,OAAH,CAAW,KAAKpB,IAAhB,EAAsB,KAAKC,IAA3B,EAAiC,KAAKI,IAAtC;AACH,WAFD;AAGH;AAEJ,OAvCL;AAwCI,MAAA,IAAI,EAAEZ,EAAE,IAAI;AACRA,QAAAA,EAAE,CAAC4B,UAAH,CAAc,KAAd;AACA,YAAIC,CAAC,GAAG7B,EAAE,CAAC8B,UAAH,GAAgB,EAAxB,CAFQ,CAEoB;AAE5B;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtB,MAAM,CAAC,CAAD,CAA1B,EAA+BsB,CAAC,EAAhC,EAAoC;AAChChC,UAAAA,UAAU,CAACiC,IAAX,CAAgB,IAAI1B,SAAJ,EAAhB,EADgC,CACE;AACrC,SAPO,CASR;;;AACA,aAAK,IAAI2B,KAAT,IAAkBlC,UAAlB,EAA8B;AAC1BkC,UAAAA,KAAK,CAAChB,MAAN,CAAaY,CAAb,EAD0B,CACT;;AACjBI,UAAAA,KAAK,CAACP,OAAN,GAF0B,CAET;AACpB;AAEJ,OAvDL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAgEH;;AArEmC;;AAwExC,eAAe9B,SAAf","sourcesContent":["import React from 'react';\nimport Sketch from 'react-p5';\nimport './style.css';\n\nclass Snowflake extends React.Component {\n\n    render() {\n        let snowflakes = [];\n\n        return (\n            <div className=\"center\">\n                <h1>Floating Snowflakes</h1>\n                <a href=\"https://p5js.org/examples/simulate-snowflakes.html\">Original Sketch reference </a>\n                <hr />\n                <Sketch\n                    setup={(p5, parentRef) => {\n                        p5.createCanvas(700, 500).parent(parentRef);\n                        p5.fill(240);\n                        p5.noStroke();\n\n                        // snowflake class\n                        function snowflake() {\n                            // initialize coordinates\n                            this.posX = 0;\n                            this.posY = p5.random(-50, 0);\n                            this.initialangle = p5.random(0, 2 * PI);\n                            this.size = p5.random(2, 5);\n\n                            // radius of snowflake spiral\n                            // chosen so the snowflakes are uniformly spread out in area\n                            this.radius = sqrt(p5.random(p5.pow(p5.width / 2, 2)));\n\n                            this.update = function (time) {\n                                // x position follows a circle\n                                let w = 0.6; // angular speed\n                                let angle = w * time + this.initialangle;\n                                this.posX = p5.width / 2 + this.radius * p5.sin(angle);\n\n                                // different size snowflakes fall at slightly different y speeds\n                                this.posY += p5.pow(this.size, 0.5);\n\n                                // delete snowflake if past end of screen\n                                if (this.posY > p5.height) {\n                                    let index = snowflakes.indexOf(this);\n                                    snowflakes.splice(index, 1);\n                                }\n                            };\n\n                            this.display = function () {\n                                p5.ellipse(this.posX, this.posY, this.size);\n                            };\n                        }\n\n                    }}\n                    draw={p5 => {\n                        p5.background('red');\n                        let t = p5.frameCount / 60; // update time\n\n                        // create a random number of snowflakes each frame\n                        for (let i = 0; i < random(5); i++) {\n                            snowflakes.push(new snowflake()); // append snowflake object\n                        }\n\n                        // loop through snowflakes with a for..of loop\n                        for (let flake of snowflakes) {\n                            flake.update(t); // update snowflake position\n                            flake.display(); // draw snowflake\n                        }\n\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Snowflake;"]},"metadata":{},"sourceType":"module"}