{"ast":null,"code":"var _jsxFileName = \"/workspace/fewd_p5_integration/my-react-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sketch from 'react-p5';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setup = (p5, parentRef) => {\n      p5.createCanvas(200, 200).parent(parentRef);\n      p5.fill(240);\n      p5.noStroke();\n    };\n\n    this.draw = p5 => {\n      p5.background('pink');\n      let t = p5.frameCount / 60; // update time\n      // create a random number of snowflakes each frame\n\n      for (let i = 0; i < p5.random(5); i++) {\n        this.snowflakes.push(new snowflake()); // append snowflake object\n      } // loop through snowflakes with a for..of loop\n\n\n      for (let flake of p5.snowflakes) {\n        flake.update(t); // update snowflake position\n\n        flake.display(); // draw snowflake\n      }\n    };\n\n    this.snowflake = p5 => {\n      // initialize coordinates\n      this.posX = 0;\n      this.posY = p5.random(-50, 0);\n      this.initialangle = p5.random(0, 2 * p5.PI);\n      this.size = p5.random(2, 5); // radius of snowflake spiral\n      // chosen so the snowflakes are uniformly spread out in area\n\n      this.radius = p5.sqrt(p5.random(p5.pow(p5.width / 2, 2)));\n\n      this.update = function (time) {\n        // x position follows a circle\n        let w = 0.6; // angular speed\n\n        let angle = w * time + this.initialangle;\n        this.posX = p5.width / 2 + this.radius * p5.sin(angle); // different size snowflakes fall at slightly different y speeds\n\n        this.posY += p5.pow(this.size, 0.5); // delete snowflake if past end of screen\n\n        if (this.posY > p5.height) {\n          let index = p5.snowflakes.indexOf(this);\n          p5.snowflakes.splice(index, 1);\n        }\n      };\n\n      this.display = function () {\n        p5.ellipse(this.posX, this.posY, this.size);\n      };\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"react-p5\"), /*#__PURE__*/React.createElement(Sketch, {\n      setup: this.setup,\n      draw: this.draw,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/workspace/fewd_p5_integration/my-react-app/src/index.js"],"names":["React","ReactDOM","Sketch","App","Component","setup","p5","parentRef","createCanvas","parent","fill","noStroke","draw","background","t","frameCount","i","random","snowflakes","push","snowflake","flake","update","display","posX","posY","initialangle","PI","size","radius","sqrt","pow","width","time","w","angle","sin","height","index","indexOf","splice","ellipse","render","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sketch from 'react-p5';\n\n\nclass App extends React.Component {\n    setup = (p5, parentRef) => {\n        p5.createCanvas(200, 200).parent(parentRef);\n        p5.fill(240);\n        p5.noStroke();\n    };\n\n    draw =  p5 => {\n    p5.background('pink');\n    let t = p5.frameCount / 60; // update time\n\n    // create a random number of snowflakes each frame\n    for (let i = 0; i < p5.random(5); i++) {\n        this.snowflakes.push(new snowflake()); // append snowflake object\n    }\n\n    // loop through snowflakes with a for..of loop\n    for (let flake of p5.snowflakes) {\n        flake.update(t); // update snowflake position\n        flake.display(); // draw snowflake\n    }\n};\n\n// snowflake class\nsnowflake = p5 => {\n    // initialize coordinates\n    this.posX = 0;\n    this.posY = p5.random(-50, 0);\n    this.initialangle = p5.random(0, 2 * p5.PI);\n    this.size = p5.random(2, 5);\n\n    // radius of snowflake spiral\n    // chosen so the snowflakes are uniformly spread out in area\n    this.radius = p5.sqrt(p5.random(p5.pow(p5.width / 2, 2)));\n\n    this.update = function (time) {\n        // x position follows a circle\n        let w = 0.6; // angular speed\n        let angle = w * time + this.initialangle;\n        this.posX = p5.width / 2 + this.radius * p5.sin(angle);\n\n        // different size snowflakes fall at slightly different y speeds\n        this.posY += p5.pow(this.size, 0.5);\n\n        // delete snowflake if past end of screen\n        if (this.posY > p5.height) {\n            let index = p5.snowflakes.indexOf(this);\n            p5.snowflakes.splice(index, 1);\n        }\n    };\n\n    this.display = function () {\n        p5.ellipse(this.posX, this.posY, this.size);\n    }\n};\n\n\nrender() {\n    return (\n        <div className=\"App\">\n            <h1>react-p5</h1>\n            <Sketch setup={this.setup} draw={this.draw}/>\n        </div>\n    );\n};\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);"]},"metadata":{},"sourceType":"module"}