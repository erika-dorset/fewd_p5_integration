{"ast":null,"code":"var _jsxFileName = \"/workspace/fewd_p5_integration/my-react-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sketch from 'react-p5';\n\nclass App extends React.Component {\n  render() {\n    let particles = [];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }\n    }, \"react-p5\"), /*#__PURE__*/React.createElement(Sketch, {\n      setup: (p5, parentRef) => {\n        p5.createCanvas(720, 400).parent(parentRef);\n\n        for (let i = 0; i < p5.width / 10; i++) {\n          // this class describes the properties of a single particle.\n          class Particle {\n            // setting the co-ordinates, radius and the\n            // speed of a particle in both the co-ordinates axes.\n            constructor() {\n              this.x = p5.random(0, p5.width);\n              this.y = p5.random(0, p5.height);\n              this.r = p5.random(1, 8);\n              this.xSpeed = p5.random(-2, 2);\n              this.ySpeed = p5.random(-1, 1.5);\n            } // creation of a particle.\n\n\n            createParticle() {\n              p5.noStroke();\n              p5.fill('rgba(200,169,169,0.5)');\n              p5.circle(this.x, this.y, this.r);\n            } // setting the particle in motion.\n\n\n            moveParticle() {\n              if (this.x < 0 || this.x > p5.width) this.xSpeed *= -1;\n              if (this.y < 0 || this.y > p5.height) this.ySpeed *= -1;\n              this.x += this.xSpeed;\n              this.y += this.ySpeed;\n            } // this function creates the connections(lines)\n            // between particles which are less than a certain distance apart\n\n\n            joinParticles(paraticles) {\n              particles.forEach(element => {\n                let dis = dist(this.x, this.y, element.x, element.y);\n\n                if (dis < 85) {\n                  stroke('rgba(255,255,255,0.04)');\n                  line(this.x, this.y, element.x, element.y);\n                }\n              });\n            }\n\n          }\n\n          ;\n          particles.push(new Particle());\n        }\n      },\n      draw: p5 => {\n        p5.background('#0f0f0f');\n\n        for (let i = 0; i < particles.length; i++) {\n          particles[i].createParticle();\n          particles[i].moveParticle();\n          particles[i].joinParticles(particles.slice(i));\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/workspace/fewd_p5_integration/my-react-app/src/index.js"],"names":["React","ReactDOM","Sketch","App","Component","render","particles","p5","parentRef","createCanvas","parent","i","width","Particle","constructor","x","random","y","height","r","xSpeed","ySpeed","createParticle","noStroke","fill","circle","moveParticle","joinParticles","paraticles","forEach","element","dis","dist","stroke","line","push","background","length","slice","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sketch from 'react-p5';\n\nclass App extends React.Component {\n\n    render() {\n        let particles = [];\n\n        return (\n            <div className=\"App\">\n                <h1>react-p5</h1>\n                <Sketch\n                    setup={(p5, parentRef) => {\n                        p5.createCanvas(720, 400).parent(parentRef);\n                        for (let i = 0; i < p5.width / 10; i++) {\n\n                            // this class describes the properties of a single particle.\n                            class Particle {\n                                // setting the co-ordinates, radius and the\n                                // speed of a particle in both the co-ordinates axes.\n                                constructor() {\n                                    this.x = p5.random(0, p5.width);\n                                    this.y = p5.random(0, p5.height);\n                                    this.r = p5.random(1, 8);\n                                    this.xSpeed = p5.random(-2, 2);\n                                    this.ySpeed = p5.random(-1, 1.5);\n                                }\n                                // creation of a particle.\n                                createParticle() {\n                                    p5.noStroke();\n                                    p5.fill('rgba(200,169,169,0.5)');\n                                    p5.circle(this.x, this.y, this.r);\n                                }\n\n                                // setting the particle in motion.\n                                moveParticle() {\n                                    if (this.x < 0 || this.x > p5.width)\n                                        this.xSpeed *= -1;\n                                    if (this.y < 0 || this.y > p5.height)\n                                        this.ySpeed *= -1;\n                                    this.x += this.xSpeed;\n                                    this.y += this.ySpeed;\n                                }\n\n                                // this function creates the connections(lines)\n                                // between particles which are less than a certain distance apart\n                                joinParticles(paraticles) {\n                                    particles.forEach(element => {\n                                        let dis = dist(this.x, this.y, element.x, element.y);\n                                        if (dis < 85) {\n                                            stroke('rgba(255,255,255,0.04)');\n                                            line(this.x, this.y, element.x, element.y);\n                                        }\n                                    });\n                                }\n                            };\n\n                            particles.push(new Particle());\n                        }\n                    }}\n                    draw={p5 => {\n                        p5.background('#0f0f0f');\n                        for (let i = 0; i < particles.length; i++) {\n                            particles[i].createParticle();\n                            particles[i].moveParticle();\n                            particles[i].joinParticles(particles.slice(i));\n                        }\n\n                    }}\n                />\n            </div>\n        );\n    }\n}\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}