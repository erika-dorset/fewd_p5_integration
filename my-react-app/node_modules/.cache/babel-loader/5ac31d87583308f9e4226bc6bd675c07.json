{"ast":null,"code":"var _jsxFileName = \"/workspace/fewd_p5_integration/my-react-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sketch from 'react-p5';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      color: [Math.random() * 255, Math.random() * 255, Math.random() * 255]\n    };\n    this.randomColor = this.randomColor.bind(this);\n  }\n\n  randomColor() {\n    this.setState({\n      color: [Math.random() * 255, Math.random() * 255, Math.random() * 255]\n    });\n  }\n\n  render() {\n    let snowflakes = [];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, \"react-p5\"), /*#__PURE__*/React.createElement(Sketch, {\n      setup: (p5, parentRef) => {\n        p5.createCanvas(1000, 400).parent(parentRef);\n        p5.fill(240);\n      },\n      draw: p5 => {\n        p5.background('pink');\n        p5.fill(255, this.y * 1.3, 0);\n        let t = p5.frameCount / 60; // update time\n        // create a random number of snowflakes each frame\n\n        for (let i = 0; i < p5.random(5); i++) {\n          this.snowflakes.push(new snowflake()); // append snowflake object\n        } // loop through snowflakes with a for..of loop\n\n\n        for (let flake of this.snowflakes) {\n          flake.update(t); // update snowflake position\n\n          flake.display(); // draw snowflake\n        }\n      },\n      snowflake: p5 => {\n        // initialize coordinates\n        this.posX = 0;\n        this.posY = p5.random(-50, 0);\n        this.initialangle = p5.random(0, 2 * p5.PI);\n        this.size = p5.random(2, 5); // radius of snowflake spiral\n        // chosen so the snowflakes are uniformly spread out in area\n\n        this.radius = p5.sqrt(p5.random(p5.pow(p5.width / 2, 2)));\n\n        this.update = function (time) {\n          // x position follows a circle\n          let w = 0.6; // angular speed\n\n          let angle = w * time + this.initialangle;\n          this.posX = p5.width / 2 + this.radius * p5.sin(angle); // different size snowflakes fall at slightly different y speeds\n\n          this.posY += p5.pow(this.size, 0.5); // delete snowflake if past end of screen\n\n          if (this.posY > p5.height) {\n            let index = snowflakes.indexOf(this);\n            snowflakes.splice(index, 1);\n          }\n        };\n\n        this.display = function () {\n          p5.ellipse(this.posX, this.posY, this.size);\n        };\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/workspace/fewd_p5_integration/my-react-app/src/index.js"],"names":["React","ReactDOM","Sketch","App","Component","constructor","state","color","Math","random","randomColor","bind","setState","render","snowflakes","p5","parentRef","createCanvas","parent","fill","background","y","t","frameCount","i","push","snowflake","flake","update","display","posX","posY","initialangle","PI","size","radius","sqrt","pow","width","time","w","angle","sin","height","index","indexOf","splice","ellipse","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sketch from 'react-p5';\n\n\nclass App extends React.Component {\n      constructor(){\n    super();\n    this.state = {color:[Math.random()*255, Math.random()*255, Math.random()*255]};\n    this.randomColor = this.randomColor.bind(this);\n  }\n\n    randomColor(){\n    this.setState({color:[Math.random()*255, Math.random()*255, Math.random()*255]}\n    )\n  }\n\n\n    render() {\n        let snowflakes = [];\n        return (\n            <div className=\"App\">\n                <h1>react-p5</h1>\n                <Sketch\n                    setup={(p5, parentRef) => {\n                        p5.createCanvas(1000, 400).parent(parentRef);\n                        p5.fill(240);\n                    }}\n                    draw={p5 => {\n                        p5.background('pink');\n\n                        p5.fill(255, this.y * 1.3, 0);\n                        let t = p5.frameCount / 60; // update time\n\n                        // create a random number of snowflakes each frame\n                        for (let i = 0; i < p5.random(5); i++) {\n                            this.snowflakes.push(new snowflake()); // append snowflake object\n                        }\n\n                        // loop through snowflakes with a for..of loop\n                        for (let flake of this.snowflakes) {\n                            flake.update(t); // update snowflake position\n                            flake.display(); // draw snowflake\n                        }\n                    }}\n\n                    snowflake={p5 => {\n                        // initialize coordinates\n                        this.posX = 0;\n                        this.posY = p5.random(-50, 0);\n                        this.initialangle = p5.random(0, 2 * p5.PI);\n                        this.size = p5.random(2, 5);\n\n                        // radius of snowflake spiral\n                        // chosen so the snowflakes are uniformly spread out in area\n                        this.radius = p5.sqrt(p5.random(p5.pow(p5.width / 2, 2)));\n\n                        this.update = function (time) {\n                            // x position follows a circle\n                            let w = 0.6; // angular speed\n                            let angle = w * time + this.initialangle;\n                            this.posX =p5. width / 2 + this.radius * p5.sin(angle);\n\n                            // different size snowflakes fall at slightly different y speeds\n                            this.posY += p5.pow(this.size, 0.5);\n\n                            // delete snowflake if past end of screen\n                            if (this.posY > p5.height) {\n                                let index = snowflakes.indexOf(this);\n                                snowflakes.splice(index, 1);\n                            }\n                        };\n\n                        this.display = function () {\n                            p5.ellipse(this.posX, this.posY, this.size);\n                        };\n                    }}\n\n\n                />\n            </div>\n        );\n    }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);"]},"metadata":{},"sourceType":"module"}